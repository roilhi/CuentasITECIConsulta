<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>