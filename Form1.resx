<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D4t5ohsMm2u1AAAAAElFTkSuQmCC
</value>
  </data>
</root>